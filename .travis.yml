sudo: false
notifications:
  slack:
    secure: OvkwWFNZXlD9CkUZBMdhiMGERlHeImEcWpCUp0vk/Z8pS7iM3PjrWYF7iZtt1La6z9LrQXh15OhI1jn6VN8IzMeZmrJYv3cgAJiCUnRkOu2iQjW6MKsZNl9gccdxfUr7r5wrV3th+48d353T7W2WEd6ADJSeI5jKu37STwIjztM=

# language: python
language: c
# We're not Python 2.6 compatible at the moment
# python: "2.7"
addons:
  apt:
    packages:
        - build-essential
        - python-dev
        - git
        - mercurial
        - python-pip
        - libopenmpi-dev
        - openmpi-bin
        - libblas-dev
        - liblapack-dev
        - gfortran
        - gmsh
        - python-tk
os:
    - linux
    - osx
# Separate cache directories for OSX and Linux
cache:
  directories:
    - $HOME/cached_dependencies_$TRAVIS_OS_NAME
env:
  global:
    - CC=mpicc
    # The install script expects to see this environment variable
    - CACHE_DIRECTORY=$HOME/cached_dependencies_$TRAVIS_OS_NAME
    - FIREDRAKE_TRAVIS_TESTS=1
    - PACKAGE_MANAGER="--no-package-manager"
    - SLEPC="--slepc"
    - COVERAGE_DIRS="--cov firedrake"
  matrix:
    - PYOP2_BACKEND=none
matrix:
  exclude:
    - env: PYOP2_BACKEND=none
  include:
    - os: osx
      # Only test a few things on OSX until we can cache some of the
      # build dependencies, otherwise we often get timeouts.
      env:
        PYOP2_BACKEND=sequential
        PYOP2_TESTS="extrusion"
        TEST_ADJOINT="TRUE"
        PACKAGE_MANAGER=""
        SLEPC=""
    - os: linux
      env:
        PYOP2_BACKEND=sequential
        PYOP2_TESTS=regression
    - os: linux
      env:
        PYOP2_BACKEND=sequential
        PYOP2_TESTS="extrusion output multigrid benchmarks demos"
        TEST_ADJOINT="TRUE"
before_install:
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then brew update; brew install python; brew link --overwrite python ;  fi
  - pip install -U --user pip
  - pip install -U --user virtualenv
  # Fail fast on lint errors
  - pip install -U --user flake8
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then export PATH=$PATH:$HOME/Library/Python/2.7/bin; fi
  - make lint
install:
  - export CC=mpicc
  - mkdir tmp
  - cd tmp
  - ../scripts/firedrake-install --disable-ssh --minimal-petsc ${SLEPC} --adjoint ${PACKAGE_MANAGER} --package-branch fiat hdiv-trace-implementation --package-branch tsfc tsfc-trace --package-branch ufl trace-element-fix
  - . ./firedrake/bin/activate
  # Test that running firedrake-update works
  - firedrake-update
  # Having activated the virtualenv, attempt to save cached dependencies
  # This saves PETSc and petsc4py to speed up building
  - (cd firedrake; ../../scripts/firedrake-install --write-cache)
  - if [ "x$TEST_ADJOINT" != "x" ]; then pip install scipy; fi
  # For code coverage
  - pip install pytest-cov
# command to run tests
script:
  - cd firedrake/src
  - (cd firedrake; make lint)
  - (cd firedrake; rc=0; for t in ${PYOP2_TESTS}; do py.test --cov-append ${COVERAGE_DIRS} --short -v tests/${t} || rc=$?; done; exit $rc)
  - if [ "x$TEST_ADJOINT" != "x" ]; then (cd dolfin-adjoint; py.test -v tests_firedrake); fi
after_success:
  - (cd firedrake; bash <(curl -s https://codecov.io/bash))
